#define		NC2G_NETWORK_MSG_TYPE	0x30
#define		NC2G_SYSTEM_MSG_TYPE	0x31
#define		NC2G_PLAYER_MSG_TYPE	0x32
#define		NC2G_ROOM_MSG_TYPE		0x33
#define		NC2G_LOBBY_MSG_TYPE		0x34
#define		NC2G_FRIEND_MSG_TYPE	0x36
#define		NC2G_CHANNEL_MSG_TYPE	0x37
#define		NC2G_PERSON_SPACE_MSG_TYPE	0x38
#define		NC2G_SHOP_MSG_TYPE		0x39
#define		NC2G_3DLOBBY_MSG_TYPE	0x3a
#define 	NC2G_MAP_MSG_TYPE		0x3b
#define		NC2G_NPC_MSG_TYPE		0x3c
#define		NC2G_TEAM_MSG_TYPE		0x3d
#define		NC2G_DEPOT_MSG_TYPE		0x3e

//////////////////////////////////////////////////////////////////////////
// 登录验证
//////////////////////////////////////////////////////////////////////////
message NC2G_LoginVerified( NC2G_SYSTEM_MSG_TYPE, NC2G_LOGIN_VERIFIED )
{
	unsigned int	login_id;
	//char			key[MAX_KEY_MAP_LENGTH];
	string	strKey;
}

//////////////////////////////////////////////////////////////////////////
// 选择用户
//////////////////////////////////////////////////////////////////////////
message NC2G_SelectRole( NC2G_SYSTEM_MSG_TYPE, NC2G_SELECT_ROLE )
{
	unsigned int	role_idx;
};

//////////////////////////////////////////////////////////////////////////
// 创建用户
//////////////////////////////////////////////////////////////////////////
message NC2G_CreateRole( NC2G_SYSTEM_MSG_TYPE, NC2G_CREATE_ROLE )
{
	_string rolename;
	unsigned short	avatar_id[MAX_AVATAR_COUNT];
	unsigned char	sex;
}

//////////////////////////////////////////////////////////////////////////
// 创建用户
//////////////////////////////////////////////////////////////////////////
message NC2G_DeleteRole( NC2G_SYSTEM_MSG_TYPE, NC2G_DELETE_ROLE )
{
	unsigned char	role_index;
}

//////////////////////////////////////////////////////////////////////////
// 选择大区
//////////////////////////////////////////////////////////////////////////
message NC2G_SelectRegion( NC2G_SYSTEM_MSG_TYPE, NC2G_SELECT_REGION )
{
	unsigned short	region_id;
};

//////////////////////////////////////////////////////////////////////////
// 请求PVP服务器列表
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestServerList( NC2G_SYSTEM_MSG_TYPE, NC2G_REQUEST_SERVERLIST )
{
	unsigned char	page_index;
};

//////////////////////////////////////////////////////////////////////////
// 请求连接服务器
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestJumpServer( NC2G_SYSTEM_MSG_TYPE, NC2G_REQUEST_JUMP_SERVER )
{
	unsigned int	dest_lobby_id;
};

//////////////////////////////////////////////////////////////////////////
// 选择服务器
//////////////////////////////////////////////////////////////////////////
message NC2G_EnterLobby( NC2G_SYSTEM_MSG_TYPE, NC2G_ENTER_LOBBY )
{
	unsigned int	login_id;
	char			key[MAX_KEY_MAP_LENGTH];
};

//////////////////////////////////////////////////////////////////////////
// 上传内外网地址
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerReportAddress( NC2G_SYSTEM_MSG_TYPE, NC2G_PLAYER_REPORT_ADDRESS )
{
	unsigned int	outer_address;
	unsigned int	inner_address;
	unsigned short	outer_port;
	unsigned short	inner_port;
	unsigned char   UPnPSupport;
};

//////////////////////////////////////////////////////////////////////////
// 创建房间
//////////////////////////////////////////////////////////////////////////
message NC2G_CreateRoom( NC2G_LOBBY_MSG_TYPE, NC2G_CREATE_ROOM )
{
	_tchar			room_name[MAX_ROOM_NAME];
	_tchar			password[MAX_ROOM_PWD_LEN];
	unsigned char	mode;
	unsigned char	team;
	unsigned char   capability;
	unsigned short	level;
};

//////////////////////////////////////////////////////////////////////////
// 请求房间列表
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestRoomList( NC2G_LOBBY_MSG_TYPE, NC2G_REQUEST_ROOM_LIST )
{
	unsigned char		page;
	unsigned char		mode;
	unsigned char		team;
	enum
	{
		mode_free,
		mode_scroll,
		mode_all,
	};

	enum
	{
		team_single,
		team_group,
		team_pve,
		team_all,
	};
};

//////////////////////////////////////////////////////////////////////////
// 请求快速加入
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestQuickEnterRoom( NC2G_LOBBY_MSG_TYPE, NC2G_REQUEST_QUICK_ENTER_ROOM )
{
	unsigned char		mode;
	unsigned char		team;
	enum{ mode_free, mode_scroll, mode_all, };
	enum{ team_single, team_group, team_pve, team_all, };
};

//////////////////////////////////////////////////////////////////////////
// 请求大厅玩家列表
//////////////////////////////////////////////////////////////////////////
message NC2G_LobbyRequestPlayerList( NC2G_LOBBY_MSG_TYPE, NC2G_LOBBY_REQUEST_PLAYER_LIST )
{
	unsigned short		page;
};

//////////////////////////////////////////////////////////////////////////
// 请求进入房间
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterRoom( NC2G_LOBBY_MSG_TYPE, NC2G_REQUEST_ENTER_ROOM )
{
	unsigned int	room_id;
	_string			password;
};

//////////////////////////////////////////////////////////////////////////
// 请求离开房间
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestLeaveRoom( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_LEAVE_ROOM )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求大厅玩家列表
//////////////////////////////////////////////////////////////////////////
message NC2G_RoomRequestPlayerList( NC2G_ROOM_MSG_TYPE, NC2G_ROOM_REQUEST_PLAYER_LIST )
{
	unsigned short	page;
};

//////////////////////////////////////////////////////////////////////////
// NC2G_CHANGE_ROOM_STATUS_MSG_ID
// 房间状态变更
//////////////////////////////////////////////////////////////////////////
message NC2G_ChangeRoomStatus( NC2G_ROOM_MSG_TYPE, NC2G_CHANGE_ROOM_STATUS )
{
	_string room_name;
	unsigned char	gmode;
	unsigned char	rmode;
	unsigned char	capacity;
	unsigned char	player_count;
	unsigned short  serial_level_id;
	unsigned short	map_id;
};

//////////////////////////////////////////////////////////////////////////
// 游戏状态变更
//////////////////////////////////////////////////////////////////////////
message NC2G_ChangeGameStatus( NC2G_ROOM_MSG_TYPE, NC2G_CHANGE_GAME_STATUS )
{
	unsigned char	status;
};

//////////////////////////////////////////////////////////////////////////
//  游戏网络创建失败
//////////////////////////////////////////////////////////////////////////
message NC2G_ClientNetFailed( NC2G_ROOM_MSG_TYPE, NC2G_CLIENT_NET_FAILED )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求开始游戏消息
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestGameStart( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_GAME_START )
{
};


//////////////////////////////////////////////////////////////////////////
// 发送网络状况报告
//////////////////////////////////////////////////////////////////////////
message NC2G_ClientNetReport( NC2G_ROOM_MSG_TYPE, NC2G_CLIENT_NET_REPORT )
{
	unsigned char	inner;
	unsigned char	peer_inner;
	unsigned short	relay_ping;
	unsigned short	p2p_ping;
};

//////////////////////////////////////////////////////////////////////////
// 用户更换装备消息
// NC2G_INSTEAD_AVATARID_MSG_ID
//////////////////////////////////////////////////////////////////////////
message NC2G_ChangeEquip( NC2G_ROOM_MSG_TYPE, NC2G_CHANGE_EQUIP )
{
	unsigned int	player_id;
	unsigned short	avatar_id;
};

//////////////////////////////////////////////////////////////////////////
// 请求连接RelayerServer 消息
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestRelayServer( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_RELAY_SERVER )
{
};

//////////////////////////////////////////////////////////////////////////
// 聊天消息
//////////////////////////////////////////////////////////////////////////
message NC2G_Talk( NC2G_CHANNEL_MSG_TYPE, NC2G_TALK )
{
	_string	talk_content;
};

//////////////////////////////////////////////////////////////////////////
// 房主请求踢出玩家消息
//////////////////////////////////////////////////////////////////////////
message NC2G_KickPlayer( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_KICK_PLAYER )
{
	unsigned int	ncharID;	// 退出的玩家
};

//////////////////////////////////////////////////////////////////////////
// 禁止玩家发言
//////////////////////////////////////////////////////////////////////////
message NC2G_ForbidPlayer( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_FORBID_PLAYER )
{
	unsigned int	player_id;	// 禁言的玩家
};

//////////////////////////////////////////////////////////////////////////
// 添加好友
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerAddFriend( NC2G_FRIEND_MSG_TYPE, NC2G_PLAYER_ADD_FRIEND )
{
	_string nickname;
};

//////////////////////////////////////////////////////////////////////////
// 删除好友
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerDelFriend( NC2G_FRIEND_MSG_TYPE, NC2G_PLAYER_DEL_FRIEND )
{
	_string		nickname;
};

//////////////////////////////////////////////////////////////////////////
// 屏蔽好友
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerForbidFriend( NC2G_FRIEND_MSG_TYPE,	NC2G_PLAYER_FORBID_FRIEND )
{
	_string		nickname;
	// true - 屏蔽, false - 解除屏蔽
	bool		flag_forbid;
};

//////////////////////////////////////////////////////////////////////////
// 角色聊天
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerTalk( NC2G_FRIEND_MSG_TYPE,	NC2G_PLAYER_TALK )
{

	// 发给谁的
	_string		nickname;

	// 聊天内容
	_string		message;
};

//////////////////////////////////////////////////////////////////////////
// 好友聊天
//////////////////////////////////////////////////////////////////////////
message NC2G_FriendTalk( NC2G_FRIEND_MSG_TYPE, NC2G_FRIEND_TALK )
{
	unsigned int		friend_temp_id;
	unsigned short		friend_server_id;	
	// 发给谁的
	_string		nickname;

	// 聊天内容
	_string		message;
};

//////////////////////////////////////////////////////////////////////////
// 邀请好友请求
//////////////////////////////////////////////////////////////////////////
message NC2G_InviteFriendRequest( NC2G_FRIEND_MSG_TYPE, NC2G_INVITE_FRIEND_REQUEST )
{
	// 好友名字
	_string 	friend_name;
};

//////////////////////////////////////////////////////////////////////////
// 同意好友邀请
//////////////////////////////////////////////////////////////////////////
message NC2G_AgreeInvite( NC2G_FRIEND_MSG_TYPE,	NC2G_AGREE_INVITE )
{
	// 邀请角色tempid
	unsigned int		invite_role_temp_id;
	// 邀请角色server_id
	unsigned short		invite_role_server_id;
	// 邀请角色名字	
	_string		invite_role_name;
	// 房间ID
	unsigned int		room_id;
};

//////////////////////////////////////////////////////////////////////////
// 拒绝邀请
//////////////////////////////////////////////////////////////////////////
message NC2G_RefuseInvite( NC2G_FRIEND_MSG_TYPE,	NC2G_REFUSE_INVITE )
{
	unsigned int		invite_role_temp_id;
	unsigned short		invite_role_server_id;
};

//////////////////////////////////////////////////////////////////////////
// 跟随好友请求
//////////////////////////////////////////////////////////////////////////
message NC2G_FollowFriendRequest( NC2G_FRIEND_MSG_TYPE,	NC2G_FOLLOW_FRIEND_REQUEST )
{

	// 被跟随角色名字
	_string 	be_followed_role_name;
};

//////////////////////////////////////////////////////////////////////////
// 请求玩家信息
//////////////////////////////////////////////////////////////////////////
message NC2G_PlayerInfoRequest( NC2G_FRIEND_MSG_TYPE,	NC2G_PLAYER_INFO_REQUEST )
{
	unsigned int		friend_temp_id;
	unsigned short		friend_server_id;
};

//////////////////////////////////////////////////////////////////////////
// 角色翻牌请求 
//////////////////////////////////////////////////////////////////////////
message NC2G_PickupGameAwardRequest( NC2G_ROOM_MSG_TYPE,	NC2G_PICKUP_GAME_AWARD_REQUEST )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求改变队伍
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestChangeTeam( NC2G_ROOM_MSG_TYPE , NC2G_ROOM_REQUEST_CHANGE_TEAM )
{
	// 目标队伍 
	unsigned char            dest_team_id;  
};

//////////////////////////////////////////////////////////////////////////
// 请求进入个人空间,
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterPersonSpace ( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_ENTER_PERSON_SPACE )
{
};


////////////////////////////////////////////////////////////////////////////////
//请求改变物品的位置信息
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestChangeWarePos( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_CHANGE_WARE_POS )
{
	// 当前物品大类型ID,比如武器、装备、道具等等
	unsigned char type_id;
	// 请求改变的物品类型ID 
	unsigned int request_ware_type_id;   
	// 目标位置
	unsigned short dest_pos_idx;
	// 源位置
	unsigned short src_pos_idx;	
};

////////////////////////////////////////////////////////////////////////////////
//请求装备物品到角色
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestEquipWare( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_EQUIP_WARE )
{
	// 当前物品大类型ID,比如武器、装备、道具等等
	unsigned char type_id;
	// 请求装备到角色身上的物品位置
	unsigned short ware_pos_idx;
	// 请求装备到角色身上的物品类型
	unsigned int ware_type_id;
};

////////////////////////////////////////////////////////////////////////////////
//请求卸载物品到背包
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestUnEquipWare( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_UNEQUIP_WARE )
{
	// 当前物品大类型ID,比如武器、装备、道具等等
	unsigned char type_id;
	// 物品的子类型, 比如武器分为火炮、弹弓等等子类型
	unsigned int ware_type_id;
	// 目标位置,如果为-1则认为服务器自己选空格
	unsigned short   dest_pos_idx;
};

////////////////////////////////////////////////////////////////////////////////
//请求修理物品 
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestRepairWare( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_REPAIR_WARE )
{
	// 要修理的物品类型
	unsigned char type_id;				
	// 物品的位置索引
	unsigned short pos_idx;			
	// 是否使用中 
	bool bUsing;
	// 物品子类型
	unsigned int ware_type_id;
	// 所需的魔法锤的ID
	unsigned short magic_hammer_pos_idx;	
};



////////////////////////////////////////////////////////////////////////////////
//请求回收
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestRecycleWare( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_RECYCLE_WARE )
{
	// 物品的类型
	unsigned char	type_id;		
	// 物品的位置索引 
	unsigned short	pos_idx;		
	
	// 请求回收物品的数量
	unsigned char	recycle_num; 
};

////////////////////////////////////////////////////////////////////////////////
//请求房间内功能单元测试
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestRoomUnitTest( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_UNIT_TEST )
{
	// 参数列表
	unsigned int	arrIntVal[MAX_UNIT_TEST_PARAM_NUM];
	wchar_t			wstrVal[MAX_UINIT_TEXT_STR_LEN];
	char			strVal[MAX_UINIT_TEXT_STR_LEN];	
};

//请求房间内可见地图列表功能
message NC2G_RequestMapList( NC2G_ROOM_MSG_TYPE, NC2G_ROOM_REQUEST_MAP_LIST )
{
};




////////////////////////////////////////////////////////////////////////////////
//请求整理物品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestSortWare( NC2G_PERSON_SPACE_MSG_TYPE , NC2G_REQUEST_SORT_WARE )
{
	// 物品的类型
	unsigned char type_id;		
};

////////////////////////////////////////////////////////////////////////////////
//请求访问商城
///////////////////////////////////////////////////////////////////////////////

message NC2G_RequestEntryShop( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_ENTRY_SHOP )
{
};


////////////////////////////////////////////////////////////////////////////////
//请求指定页商品数据
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestSpecPageMerchandiseData( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_SPEC_PAGE_DATA )
{
	// 请求页码
	unsigned char request_page_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;

};


////////////////////////////////////////////////////////////////////////////////
//请求购买指定商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestBuyMerchandise( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_BUY_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;
	//	商品购买价格IDX
	unsigned char price_idx;
};

//	商品信息
struct merch_info
{
	//	商品ID
	unsigned int 	nMerchID;					
	// 	商品价格索引
	unsigned char 	nPriceIdx;
};

////////////////////////////////////////////////////////////////////////////////
//	请求批量购买商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestBatchBuyMerchandise( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_BATCH_BUY_MERCHANDISE )
{
	vector< merch_info >	merchs;
};

////////////////////////////////////////////////////////////////////////////////
//请求合成商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestComposeWare( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_COMPOSE_WARE )
{
	//	商品ID
	unsigned int merchandise_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;

	//	材料结构体
	struct material_info
	{
		// 是否为关键材料
		bool flag_key_material;
		//	物品类型
		unsigned char type_id;		
		// 物品在个人背包栏中的位置索引 
		unsigned short pos_idx;		
		//	物品数量
		unsigned short count;
	};
	vector< material_info >	materials;
};

////////////////////////////////////////////////////////////////////////////////
//请求赠送指定商品, 不能在合成商店中使用 
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestDonateMerchandise( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_DONATE_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	
	// 商店类型
	unsigned char shop_type;
	
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;

	// 商品位置信息
	unsigned short merch_pos_info;
	// 被赠送角色名
	_string be_donated_role_name;
};

////////////////////////////////////////////////////////////////////////////////
//请求拍卖指定商品, 不能在合成商店中使用 
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestVendueMerchandise( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_VENDUE_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;

	// 商品位置信息
	unsigned short merch_pos_info;
};

////////////////////////////////////////////////////////////////////////////////
//请求指定商品的数据
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestSpecMerchandise( NC2G_SHOP_MSG_TYPE, NC2G_REQUEST_SPEC_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	
	// 商店类型
	unsigned char shop_type;
};


// 请求角色数据
message NC2G_MapUpdatePlayerAvatarInfo( NC2G_MAP_MSG_TYPE, NC2G_MAP_REQUEST_AVATAR )
{
	vector< unsigned int > players;
};

////////////////////////////////////////////////////////////////////////////////
// 角色请求移动 
///////////////////////////////////////////////////////////////////////////////
message NC2G_MapRequestMove( NC2G_MAP_MSG_TYPE, NC2G_MAP_REQUEST_MOVE )
{
	// 前1~3位bit表示方向，后4~6位BIT表示速率，7~8位BIT保留
	unsigned char  vel;
};

////////////////////////////////////////////////////////////////////////////////
// 角色请求移动同步
///////////////////////////////////////////////////////////////////////////////
message NC2G_MapRequestMoveSynch( NC2G_MAP_MSG_TYPE, NC2G_MAP_REQUEST_MOVE_SYNCH )
{
	// 前1~3位bit表示方向，后4~6位BIT表示速率，7~8位BIT保留
	unsigned char  vel;
	float x;
	float z;
};

////////////////////////////////////////////////////////////////////////////////
// 发送聊天信息
///////////////////////////////////////////////////////////////////////////////
message NC2G_MapRequestChat( NC2G_MAP_MSG_TYPE, NC2G_MAP_REQUEST_CHAT )
{
	_string chatTxt;
};



//////////////////////////////////////////////////////////////////////////
// 开始和npc交互
//////////////////////////////////////////////////////////////////////////
message NC2G_EnterNpc( NC2G_NPC_MSG_TYPE , NC2G_ENTER_NPC )
{
	unsigned int		npc_id;
}

//////////////////////////////////////////////////////////////////////////
// 停止和npc的交互
//////////////////////////////////////////////////////////////////////////
message NC2G_LeaveNpc( NC2G_NPC_MSG_TYPE , NC2G_LEAVE_NPC )
{
}


//////////////////////////////////////////////////////////////////////////
// 请求npc对话
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcTalk( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_NPC_TALK )
{
}

//////////////////////////////////////////////////////////////////////////
// 玩家发送对话选项ID
//////////////////////////////////////////////////////////////////////////
message NC2G_SelectDialogOption( NC2G_NPC_MSG_TYPE , NC2G_SELECT_DIALOG_OPTION )
{
	//对话中选项的ID
	unsigned short option_id;
}

////////////////////////////////////////////////////////////////////////////////
//请求访问NPC商店
///////////////////////////////////////////////////////////////////////////////

message NC2G_RequestEntryNpcShop( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_ENTRY_NPC_SHOP )
{
};


////////////////////////////////////////////////////////////////////////////////
//请求npc商店指定页商品数据
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcSpecPageMerchandiseData( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_NPC_SPEC_PAGE_DATA )
{
	// 请求页码
	unsigned char request_page_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;
};


////////////////////////////////////////////////////////////////////////////////
//请求购买npc商店指定的商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcBuyMerchandise( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_NPC_BUY_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;
	//	商品购买价格IDX
	unsigned char price_idx;
};

////////////////////////////////////////////////////////////////////////////////
//	请求批量购买NPC商店商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcBatchBuyMerchandise( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_NPC_BATCH_BUY_MERCHANDISE )
{
	vector< merch_info > merchs;
};

////////////////////////////////////////////////////////////////////////////////
//请求npc合成商品
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcComposeWare( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_NPC_COMPOSE_WARE )
{
	//	商品ID
	unsigned int merchandise_id;
	// 商店类型
	unsigned char shop_type;
	// 当前子商店类型信息 
	unsigned int sub_shop_type_info;

	//	材料结构体
	struct material_info
	{
		// 是否为关键材料
		bool flag_key_material;
		//	物品类型
		unsigned char type_id;		
		// 物品在个人背包栏中的位置索引 
		unsigned short pos_idx;		
		//	物品数量
		unsigned short count;
	};
	vector< material_info > materials;
};


////////////////////////////////////////////////////////////////////////////////
//请求npc指定商品的数据
///////////////////////////////////////////////////////////////////////////////
message NC2G_RequestNpcSpecMerchandise( NC2G_NPC_MSG_TYPE, NC2G_REQUEST_NPC_SPEC_MERCHANDISE )
{
	//	商品ID
	unsigned int merchandise_id;
	
	// 商店类型
	unsigned char shop_type;
};

//////////////////////////////////////////////////////////////////////////
// 请求访问任务系统
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterTask( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_ENTER_TASK )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求接受一个任务
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestAcceptTask( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_ACCEPT_TASK )
{
	
	//任务ID
	unsigned int TaskID; 
};

//////////////////////////////////////////////////////////////////////////
// 交付完成的一个任务
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestFinishTask( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_FINISH_TASK )
{
	
	//任务ID
	unsigned int TaskID; 
};

//////////////////////////////////////////////////////////////////////////
// 放弃一个任务
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestGiveUpTask( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_GIVE_UP_TASK )
{
	//任务ID
	unsigned int TaskID; 
};

//////////////////////////////////////////////////////////////////////////
// 请求玩家任务列表
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestPlayerTaskList( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_PLAYER_TASK_LIST )
{
};

//////////////////////////////////////////////////////////////////////////
// 为测试任务完成的消息
//////////////////////////////////////////////////////////////////////////
message NC2G_TestTaskFinished( NC2G_NPC_MSG_TYPE , NC2G_TEST_TASK_FINISHED )
{
	struct kill_monster
	{
		unsigned int	monster_id;
		unsigned int	monster_num;
	};
	vector< kill_monster > killMonsters;
};



//////////////////////////////////////////////////////////////////////////
// 请求进入mini Game营地
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterMiniGame( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_ENTER_MINI_GAME )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求进入Game营地
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterGame( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_ENTER_GAME )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求查看mini game 排行
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestViewMiniGameList( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_VIEW_MINIGAME_LIST )
{
};

//////////////////////////////////////////////////////////////////////////
// 请求进入仓库
//////////////////////////////////////////////////////////////////////////
message NC2G_RequestEnterDepository( NC2G_NPC_MSG_TYPE , NC2G_REQUEST_ENTER_DEPOSITORY )
{
};


// 邀请组队
message NC2G_InvitePlayerCreateTeam( NC2G_TEAM_MSG_TYPE,   NC2G_INVITE_PLAYER_CREATE_TEAM )
{
	// 被邀请人的临时编号
	unsigned int  PlayerID;  
};


// 被邀请人的回复
message NC2G_InviteTeamTips( NC2G_TEAM_MSG_TYPE, NC2G_INVITE_TEAM_TIPS )
{
	// 邀请人的临时编号
	unsigned int PlayerID;
	unsigned char Tips;
	enum
	{
	  // 接受
	  INVITE_TEAM_TIPS_ACCEPT,  
	  // 拒绝
	  INVITE_TEAM_TIPS_REJEPT,  
	};
};


// 创建队伍
message NC2G_CreateTeamRequest( NC2G_TEAM_MSG_TYPE, NC2G_CREATE_TEAM_REQUEST )
{
	// 要创建的队伍名称
	_tchar TeamName[MAX_PLAYER_NICK_LEN]; 
};

// 通过玩家申请加入队伍
message NC2G_JoinTeamByPlayerRequest( NC2G_TEAM_MSG_TYPE, NC2G_JOIN_TEAM_BY_PLAYER_REQUEST )
{
	// 要加入的人的临时编号
	unsigned int PlayerID;
};

// 通过队伍申请加入队伍
message NC2G_JoinTeamByTeamRequest( NC2G_TEAM_MSG_TYPE, NC2G_JOIN_TEAM_BY_TEAM_REQUEST )
{
	// 要加入的队伍编号
	unsigned int TeamID;
};


// 加入队伍队长的反应
message NC2G_JoinTeamTips( NC2G_TEAM_MSG_TYPE, NC2G_JOIN_TEAM_TIPS )
{
	// 申请加入的人临时编号
	unsigned int PlayerID; 
	
	enum
	{
	  // 接受
	  JOIN_TEAM_TIPS_ACCEPT,    
	  // 拒绝
	  JOIN_TEAM_TIPS_REJEPT,    
	};
	
	unsigned char  Tips;
};

// 离开队伍 
message NC2G_LeaveTeamRequest( NC2G_TEAM_MSG_TYPE, NC2G_LEAVE_TEAM_REQUEST )
{
};

// 申请队长踢人
message NC2G_CaptainKickMemberRequest( NC2G_TEAM_MSG_TYPE, NC2G_CAPTAIN_KICK_MEMBER_REQUEST )
{
	// 待踢之人的临时编号
	unsigned int  PlayerID; 
};


// 邀请别人加入队伍
message NC2G_InviteJoinTeam( NC2G_TEAM_MSG_TYPE, NC2G_INVITE_JOIN_TEAM )
{
	// 被邀请人的临时编号
	unsigned int PlayerID; 
};

// 被邀请人的回复
message NC2G_InviteJoinTeamTips( NC2G_TEAM_MSG_TYPE, NC2G_INVITE_JOIN_TEAM_TIPS )
{
	// 邀请人的临时编号
	unsigned int PlayerID;    
	
	enum
	{
	  // 接受
	  INVITE_JOIN_TEAM_TIPS_ACCEPT,   
	  // 拒绝
	  INVITE_JOIN_TEAM_TIPS_REJEPT,   
	};
	
	unsigned char Tips;
};

// 查看大厅队伍列表
message NC2G_RequestTeamList( NC2G_TEAM_MSG_TYPE, NC2G_REQUEST_TEAM_LIST )
{
	  // 页数 第一次为0
	  unsigned char Page; 
};


// 请求队伍的详细信息
message NC2G_TeamInfoRequest( NC2G_TEAM_MSG_TYPE, NC2G_TEAM_INFO_REQUEST )
{
	// 队伍临时编号
	unsigned int TeamID; 
};

// 请求退出营地
message NC2G_LeaveEncompmentRequest( NC2G_ROOM_MSG_TYPE, NC2G_LEAVE_ENCOMPMENT_REQUEST )
{
};

// 请求营地相关地图列表
message NC2G_RequestEncompmentMapList( NC2G_ROOM_MSG_TYPE, NC2G_REQUEST_ENCOMPMENT_MAP_LIST )
{
};

// 队长在营地中选定地图
message NC2G_CaptainChangeMapSetting( NC2G_ROOM_MSG_TYPE, NC2G_CAPTAIN_CHANGE_MAP_SETTING )
{  
	unsigned int mapid;
};

// 队长结束选地图
message NC2G_CaptainSelectMapFinished( NC2G_ROOM_MSG_TYPE, NC2G_CAPTAIN_SELECT_MAP_FINISHED )
{
};

// 请求通过npc进入营地
message NC2G_EnterEncompmentRequest( NC2G_NPC_MSG_TYPE, NC2G_ENTER_ENCOMPMENT_REQUEST )
{
};

// 请求仓库指定页码数据
message NC2G_RequestDepotSpecPage( NC2G_DEPOT_MSG_TYPE, NC2G_REQUEST_SPEC_PAGE )
{
	// 页码ID 
	unsigned char spec_page_id;
};
	
// 请求从仓库拖拽物品到背包 
message NC2G_RequestDaggleWareToBag( NC2G_DEPOT_MSG_TYPE, NC2G_REQUEST_DAGGLE_WARE_TO_BAG )
{
	// 在仓库中的原位置
	unsigned short nSrcPosIdx;
	//拖拽到背包的那个背包栏	
	unsigned char nDestBagType; 
	// 拖拽到背包中的目标位置，没有位置则以原来的算法为准选择位置 	
	unsigned short nDestPosIdx;
};
 
// 请求从背包拖拽物品到仓库
message NC2G_RequestDaggleWareToDepot( NC2G_DEPOT_MSG_TYPE, NC2G_REQUEST_DAGGLE_WARE_TO_DEPOT )
{
	// 从那个背包栏拖拽到仓库
	unsigned char nBagType;
	// 在背包中的原位置 
	unsigned short nSrcPosIdx;
	//拖拽到仓库中的目标位置，没有目标位置则以原来的算法为准选择比较位置  
	unsigned short nDestPosIdx;
};

// 请求改变仓库内 物品位置 
message NC2G_RequestChangeWarePosInDepot( NC2G_DEPOT_MSG_TYPE , NC2G_REQUEST_CHANGE_WARE_POS_IN_DEPOT  )
{
	// 源位置 
	unsigned short		nSrcPosIdx;
	// 目标位置 
	unsigned short		nDestPosIdx;
};